# database.yml
# ============
#
# The `config/database.yml` file contains your custom settings for connecting
# the software to a database. You must create the databases you plan to use
# and add their connection details here to use the software.
#
# Format
# ------
#
# This file is split into sections describing different environments, each
# optimized for a different use. If you're only using the software, you
# only need to configure the "production" environment.
#
# Lines starting with an octothorpe ("#") are comments. Uncommented,
# unindented lines start a new environment (e.g., "production"). Indented
# lines below an unindented line are settings related to that environment.
#
# Example
# -------
#
#     # Section describing the "production" environment, don't change this line:
#     production:
#         # Connect to a database named "citizenry":
#         database: citizenry
#         # Connect to this database as the "root" user:
#         username: root
#         # Connect to this database using "mypassword" as the password:
#         password: mypassword
#         # Use "utf8" as the database character encoding, don't change this line:
#         encoding: utf8
#         # Use a MySQL database, don't change this line:
#         adapter: mysql2
#
# Environments
# ------------
# ** If using mysql
# The "production" environment is optimized for fast performance, like when
# you deploy the software for use in your organization. It is used when:
# * Starting a console with: rails console production
# * Starting a server with: rails server -e production
# * Running a rake task with: rake RAILS_ENV=production ...
# production:
#   database: citizenry
#   username: root
#   password:
#   encoding: utf8
#   adapter: mysql2
# development:
#   database: citizenry_dev
#   username: root
#   password:
#   encoding: utf8
#   adapter: mysql2
# test:
#   database: citizenry_test
#   username: root
#   password:
#   encoding: utf8
#   adapter: mysql2
  
# ** If using sqlite
# SQLite version 3.x
# development:
#   adapter: sqlite3
#   database: db/development.sqlite3
#   pool: 5
#   timeout: 5000
# test:
#   adapter: sqlite3
#   database: db/test.sqlite3
#   pool: 5
#   timeout: 5000
# 
# production:
#   adapter: sqlite3
#   database: db/production.sqlite3
#   pool: 5
#   timeout: 5000

# ** If using postgresql
development:
  adapter: postgresql
  database: citizenry_dev
  encoding: utf8
test:
  adapter: postgresql
  database: citizenry_test
  encoding: utf8
production:
  adapter: postgresql
  database: citizenry
  encoding: utf8